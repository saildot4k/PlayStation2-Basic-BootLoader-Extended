name: CI

on:
  repository_dispatch:
    types: [Component_update]
  push:
    branches:
      - '*'
    tags:
      - 'v*'
    paths-ignore:
      - '**.MD'
      - '**.gitkeep'
      - '**.gitignore'
  pull_request:
  workflow_dispatch:
    inputs:
      debug:
        type: boolean
        description: compile with debugging functionality
      printf:
        type: choice
        description: wich debugging messages variant to use
        options:
        - NONE
        - PRINTF
        - EE_SIO
        - SCR
        - UDPTTY

jobs:
  build:
    runs-on: ubuntu-latest
    container: ps2dev/ps2dev:latest
    steps:

      - name: Install dependencies
        run: |
          apk add build-base git p7zip

      - uses: actions/checkout@v4
      - run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git fetch --prune --unshallow

      - name: compilation opts
        if: github.event.inputs.debug == true
        run: |
          echo "DEBUG=$(echo DEBUG=1)" >> $GITHUB_ENV

      - name: Compile PS2 build
        run: |
          make release COMMIT_HASH=${GITHUB_SHA::7} BINDIR=PS2/ ${{ env.DEBUG }} PRINTF=${{ github.event.inputs.name }}

      - name: Compile PS2 MX4SIO build
        run: |
          make release COMMIT_HASH=${GITHUB_SHA::7} BINDIR=PS2_MX4SIO/ MX4SIO=1 ${{ env.DEBUG }} PRINTF=${{ github.event.inputs.name }}

      - name: Compile PSX build
        run: |
          make release COMMIT_HASH=${GITHUB_SHA::7} BINDIR=PSX/ PSX=1 ${{ env.DEBUG }} PRINTF=${{ github.event.inputs.name }}

      - name: Compile PS2 HDD build
        run: |
          make release COMMIT_HASH=${GITHUB_SHA::7} BINDIR=PS2_HDD/ HDD=1 ${{ env.DEBUG }} PRINTF=${{ github.event.inputs.name }}

      - name: Compile PS2 MMCE build
        run: |
          make release COMMIT_HASH=${GITHUB_SHA::7} BINDIR=PS2_MMCE/ MMCE=1 ${{ env.DEBUG }} PRINTF=${{ github.event.inputs.name }}

      - name: Compile PS2 MMCE HDD build
        run: |
          make release COMMIT_HASH=${GITHUB_SHA::7} BINDIR=PS2_MMCE_HDD/ MMCE=1, HDD=1 ${{ env.DEBUG }} PRINTF=${{ github.event.inputs.name }}

      - name: Compile PSX MMCE build
        run: |
          make release COMMIT_HASH=${GITHUB_SHA::7} BINDIR=PSX_MMCE/ PSX=1 MMCE=1 ${{ env.DEBUG }} PRINTF=${{ github.event.inputs.name }}

      - name: Compile PS2 chainload build
        run: |
          make release COMMIT_HASH=${GITHUB_SHA::7} CHAINLOAD=1 BINDIR=PS2_CHAINLOAD/ ${{ env.DEBUG }} PRINTF=${{ github.event.inputs.name }}

      - name: Compile PSX chainload build
        run: |
          make release COMMIT_HASH=${GITHUB_SHA::7} CHAINLOAD=1Z BINDIR=PSX_CHAINLOAD/ PSX=1 ${{ env.DEBUG }} PRINTF=${{ github.event.inputs.name }}

      - name: list
        run: |
          git ls-files -i --exclude-standard -c

      - name: prepare release folder
        run: |
          cp LICENSE release/LICENSE.TXT
          cp README.md release/README.md
          mv PS2/ release/PS2/
          mv PSX/ release/PSX/
          mv PS2_HDD/ release/PS2_HDD/
          mv PS2_MX4SIO/ release/PS2_MX4SIO/
          mv PS2_MMCE/ release/PS2_MMCE/
          mv PS2_MMCE_HDD/ release/PS2_MMCE_HDD
          mv PSX_MMCE/ release/PSX_MMCE/
          mv PS2_CHAINLOAD/ release/PS2_CHAINLOAD/
          mv PSX_CHAINLOAD/ release/PSX_CHAINLOAD/

      - name: pack release
        run: |
          CSH=${GITHUB_SHA::7}
          DATE=$(date "+%d-%m-%Y")
          TARGET="PS2BBL[$DATE]-[$CSH]"
          cp -r release/ $TARGET/
          7z a -t7z PS2BBL.7z $TARGET/*

      - name: Upload artifacts
        if: ${{ success() }}
        uses: actions/upload-artifact@v4
        with:
          name: PS2BBL
          path: |
            release/*

      - name: Create prerelease
        if: github.ref == 'refs/heads/main'
        uses: mathieucarbou/marvinpinto-action-automatic-releases@latest
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: true
          automatic_release_tag: "latest"
          title: "Latest development build"
          files: |
            PS2BBL.7z

  osdmenu:
    runs-on: ubuntu-latest
    needs: [build]
    container: ps2dev/ps2dev:latest
    steps:
      - name: Install dependencies
        run: |
          apk add build-base git p7zip

      - uses: actions/checkout@v4
      - run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git fetch --prune --unshallow

      - name: Compile OSDMenu chainloader build
        run: |
          make release CHAINLOAD=1 CHAINLOAD_PATH="mc?:/BOOT/osdmenu.elf" COMMIT_HASH=${GITHUB_SHA::7} BINDIR=OSDMENU/

      - name: Compile OSDMenu SAS chainloader build
        run: |
          make release CHAINLOAD=1 CHAINLOAD_PATH="mc?:/OSDMENU/osdmenu.elf" COMMIT_HASH=${GITHUB_SHA::7} BINDIR=OSDMENU_SAS/

      - name: list
        run: |
          git ls-files -i --exclude-standard -c

      - name: prepare release folder
        run: |
          cp LICENSE release/LICENSE.TXT
          mv OSDMENU/ release/OSDMENU/
          mv OSDMENU_SAS/ release/OSDMENU_SAS/

      - name: pack release
        run: |
          CSH=${GITHUB_SHA::7}
          DATE=$(date "+%d-%m-%Y")
          TARGET="PS2BBL[$DATE]-[$CSH]"
          cp -r release/ $TARGET/
          7z a -t7z PS2BBL_OSDMENU.7z $TARGET/*

      - name: Upload artifacts
        if: ${{ success() }}
        uses: actions/upload-artifact@v4
        with:
          name: PS2BBL_OSDMENU
          path: |
            release/*

      - name: Create prerelease
        if: github.ref == 'refs/heads/main'
        uses: mathieucarbou/marvinpinto-action-automatic-releases@latest
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: true
          automatic_release_tag: "osdmenu"
          title: "PS2BBL for OSDMenu"
          files: |
            PS2BBL_OSDMENU.7z
